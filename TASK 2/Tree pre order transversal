in c:
void preOrder(struct node *root) {
    if (root != NULL) {
        printf("%d ", root->data);
        preOrder(root->left);
        preOrder(root->right);
    }
}
in python:
def preordertransveral(self):
        elements = [self.data]
        if self.left:
            elements += self.left.preordertransveral()
        if self.right:
            elements += self.right.preordertransveral()
        return elements

explain:
In pre-order traversal, we first print the node, then the left subtree, and finally the right subtree. Here, the function is a recursive function, and all the values are being stored in the elements list.
We check if the subtree has a left branch; if so, we call the same function again but with the left branch as the main node. First, we add the node's data, then traverse the left subtree, and finally repeat the process for the right subtree. 
When we return the elements list, it will contain the values of the tree nodes according to the pre-order traversal method.
